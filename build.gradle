// For those who want the bleeding edge
buildscript {
    ext.kotlin_version = "1.3.61"
    ext.dokka_version = "0.10.0"
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://jitpack.io"
        }
        flatDir dirs: 'libs'
    }

    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
        if (project.name == "1.14-fabric") {
            classpath 'fabric-loom:fabric-loom.gradle.plugin:0.2.2-SNAPSHOT'
        } else if (project.name == "1.15.2") {
            classpath('net.minecraftforge.gradle:ForgeGradle:3.+') {
                exclude group: 'trove', module: 'trove' // preprocessor/idea requires more recent one
            }
        } else {
            classpath('com.github.ReplayMod:ForgeGradle:' + (
                    project.name == "1.12.2" ? 'd5c13801' : // FG 2.3
                            'ab81684e'  // FG 2.1
            )) {
                exclude group: 'net.sf.trove4j', module: 'trove4j' // preprocessor/idea requires more recent one
                exclude group: 'trove', module: 'trove' // different name same thing
            }
        }
    }
}
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    jcenter()
    maven {
        name = "kryonet"
        url = "http://clojars.org/repo/"
    }
    maven {
        url 'https://repository.apache.org/content/repositories/releases/org/apache/xmlgraphics/'
    }
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.sk1er.club/repository/maven-public" }
}


apply plugin: project.name == "1.15.2" ? 'net.minecraftforge.gradle' : 'net.minecraftforge.gradle.forge'
apply plugin: 'com.replaymod.preprocess'
mcVersion = project.ext.mcVersion

preprocess {
    vars.put("MC", mcVersion)
}

version = this.properties.getOrDefault("BUILD_ID", "LOCAL") //BUILD_ID
group = "club.sk1er" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Elementa" + project.name

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'
minecraft {
    if (project.name != "1.15.2") {
        version = [
                11202: '1.12.2-14.23.0.2486',
                11201: '1.12.1-14.22.0.2444',
                11200: '1.12-14.21.1.2387',
                11102: '1.11.2-13.20.0.2216',
                11100: '1.11-13.19.1.2188',
                11002: '1.10.2-12.18.2.2099',
                10904: '1.9.4-12.17.0.1976',
                10809: '1.8.9-11.15.1.2318-1.8.9'
        ][mcVersion]
        mappings = [
                11202: "snapshot_20170615",
                11201: "snapshot_20170615",
                11200: "snapshot_20170615",
                11102: "snapshot_20161220",
                11100: "snapshot_20161111",
                11002: "snapshot_20160518",
                10904: "snapshot_20160518",
                10809: "stable_22"
        ][mcVersion]


        runDir = "run"
        makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    } else {
        mappings channel: 'snapshot', version: '20200220-1.15.1'
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

        // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

        // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

        // Default run configurations.
        // These can be tweaked, removed, or duplicated as needed.
        runs {
            client {
                workingDirectory project.file('run')

                // Recommended logging data for a userdev environment
                property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

                // Recommended logging level for the console
                property 'forge.logging.console.level', 'debug'

                mods {
                    examplemod {
                        source sourceSets.main
                    }
                }
            }

            server {
                workingDirectory project.file('run')

                // Recommended logging data for a userdev environment
                property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

                // Recommended logging level for the console
                property 'forge.logging.console.level', 'debug'

                mods {
                    examplemod {
                        source sourceSets.main
                    }
                }
            }

            data {
                workingDirectory project.file('run')

                // Recommended logging data for a userdev environment
                property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

                // Recommended logging level for the console
                property 'forge.logging.console.level', 'debug'

                args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

                mods {
                    examplemod {
                        source sourceSets.main
                    }
                }
            }
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    if (mcVersion == 11502) {
        minecraft 'net.minecraftforge:forge:1.15.2-31.1.18'
    }
    implementation "club.sk1er:UniversalCraft:72-${mcVersion}-SNAPSHOT"
    implementation "org.dom4j:dom4j:2.1.1"

    implementation ('org.slick2d:slick2d-core:1.0.2') {
        exclude module: 'lwjgl'
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
        exclude "mods.toml"
        exclude "META-INF/mods.toml"

    }
}

reobf {
    shadowJar {
        if (mcVersion < 11502) {
            mappingType = 'SEARGE'
        }
    }
}

tasks.build.dependsOn reobfShadowJar

shadowJar {
    exclude('com/example/examplemod/**')
    exclude("META-INF/mods.toml")
    exclude("mods.toml")
    exclude("kotlin/**")

    if (this.properties.getOrDefault("IS_CTJS", false)) {
        relocate 'club.sk1er', 'club.sk1er.ctjs'
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

jar {
    manifest {
        attributes(
                'FMLModType': 'LIBRARY'
        )
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = "Elementa"
            version = "${project.version}-$mcVersion${this.properties.getOrDefault("IS_CI", false) ? "-SNAPSHOT" : ""}"

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.implementation.allDependencies.each {
                    if (it.group != null && it.name != null && it.name != "forge" && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }

            artifact jar
            artifact sourcesJar
        }
    }

    repositories {
        maven {
            name 'nexus'
            url "https://repo.sk1er.club/repository/maven-${this.properties.getOrDefault("IS_CI", false) ? "snapshots" : "releases"}/"

            credentials {
                username project.nexus_user
                password project.nexus_password
            }
        }
    }
}